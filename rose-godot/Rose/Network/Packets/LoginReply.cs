// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Rose.Network.Packets
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct LoginReply : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static LoginReply GetRootAsLoginReply(ByteBuffer _bb) { return GetRootAsLoginReply(_bb, new LoginReply()); }
  public static LoginReply GetRootAsLoginReply(ByteBuffer _bb, LoginReply obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LoginReply __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Rose.Network.Packets.LoginReplyValue Reply { get { int o = __p.__offset(4); return o != 0 ? (Rose.Network.Packets.LoginReplyValue)__p.bb.GetSbyte(o + __p.bb_pos) : Rose.Network.Packets.LoginReplyValue.OK; } }

  public static Offset<Rose.Network.Packets.LoginReply> CreateLoginReply(FlatBufferBuilder builder,
      Rose.Network.Packets.LoginReplyValue reply = Rose.Network.Packets.LoginReplyValue.OK) {
    builder.StartTable(1);
    LoginReply.AddReply(builder, reply);
    return LoginReply.EndLoginReply(builder);
  }

  public static void StartLoginReply(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddReply(FlatBufferBuilder builder, Rose.Network.Packets.LoginReplyValue reply) { builder.AddSbyte(0, (sbyte)reply, 0); }
  public static Offset<Rose.Network.Packets.LoginReply> EndLoginReply(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Rose.Network.Packets.LoginReply>(o);
  }
  public static void FinishLoginReplyBuffer(FlatBufferBuilder builder, Offset<Rose.Network.Packets.LoginReply> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedLoginReplyBuffer(FlatBufferBuilder builder, Offset<Rose.Network.Packets.LoginReply> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
