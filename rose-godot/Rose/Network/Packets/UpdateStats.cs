// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Rose.Network.Packets
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct UpdateStats : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static UpdateStats GetRootAsUpdateStats(ByteBuffer _bb) { return GetRootAsUpdateStats(_bb, new UpdateStats()); }
  public static UpdateStats GetRootAsUpdateStats(ByteBuffer _bb, UpdateStats obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public UpdateStats __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint TargetId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public Rose.Network.Packets.Stats? Stats { get { int o = __p.__offset(6); return o != 0 ? (Rose.Network.Packets.Stats?)(new Rose.Network.Packets.Stats()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Rose.Network.Packets.UpdateStats> CreateUpdateStats(FlatBufferBuilder builder,
      uint target_id = 0,
      Offset<Rose.Network.Packets.Stats> statsOffset = default(Offset<Rose.Network.Packets.Stats>)) {
    builder.StartTable(2);
    UpdateStats.AddStats(builder, statsOffset);
    UpdateStats.AddTargetId(builder, target_id);
    return UpdateStats.EndUpdateStats(builder);
  }

  public static void StartUpdateStats(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddTargetId(FlatBufferBuilder builder, uint targetId) { builder.AddUint(0, targetId, 0); }
  public static void AddStats(FlatBufferBuilder builder, Offset<Rose.Network.Packets.Stats> statsOffset) { builder.AddOffset(1, statsOffset.Value, 0); }
  public static Offset<Rose.Network.Packets.UpdateStats> EndUpdateStats(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Rose.Network.Packets.UpdateStats>(o);
  }
  public static void FinishUpdateStatsBuffer(FlatBufferBuilder builder, Offset<Rose.Network.Packets.UpdateStats> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedUpdateStatsBuffer(FlatBufferBuilder builder, Offset<Rose.Network.Packets.UpdateStats> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
