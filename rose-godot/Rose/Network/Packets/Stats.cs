// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Rose.Network.Packets
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Stats : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Stats GetRootAsStats(ByteBuffer _bb) { return GetRootAsStats(_bb, new Stats()); }
  public static Stats GetRootAsStats(ByteBuffer _bb, Stats obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Stats __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Str { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Dex { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort _int { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Con { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Cha { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Sen { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort MoveSpeed { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort AttackSpeed { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public uint AttackPower { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint HitRate { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ushort Crit { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Defense { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort MagicResistance { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Dodge { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public byte Level { get { int o = __p.__offset(32); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public uint Hp { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Mp { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint Exp { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ushort Stamina { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort StatPoints { get { int o = __p.__offset(42); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort SkillPoints { get { int o = __p.__offset(44); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<Rose.Network.Packets.Stats> CreateStats(FlatBufferBuilder builder,
      ushort str = 0,
      ushort dex = 0,
      ushort _int = 0,
      ushort con = 0,
      ushort cha = 0,
      ushort sen = 0,
      ushort move_speed = 0,
      ushort attack_speed = 0,
      uint attack_power = 0,
      uint hit_rate = 0,
      ushort crit = 0,
      ushort defense = 0,
      ushort magic_resistance = 0,
      ushort dodge = 0,
      byte level = 0,
      uint hp = 0,
      uint mp = 0,
      uint exp = 0,
      ushort stamina = 0,
      ushort stat_points = 0,
      ushort skill_points = 0) {
    builder.StartTable(21);
    Stats.AddExp(builder, exp);
    Stats.AddMp(builder, mp);
    Stats.AddHp(builder, hp);
    Stats.AddHitRate(builder, hit_rate);
    Stats.AddAttackPower(builder, attack_power);
    Stats.AddSkillPoints(builder, skill_points);
    Stats.AddStatPoints(builder, stat_points);
    Stats.AddStamina(builder, stamina);
    Stats.AddDodge(builder, dodge);
    Stats.AddMagicResistance(builder, magic_resistance);
    Stats.AddDefense(builder, defense);
    Stats.AddCrit(builder, crit);
    Stats.AddAttackSpeed(builder, attack_speed);
    Stats.AddMoveSpeed(builder, move_speed);
    Stats.AddSen(builder, sen);
    Stats.AddCha(builder, cha);
    Stats.AddCon(builder, con);
    Stats.Add_int(builder, _int);
    Stats.AddDex(builder, dex);
    Stats.AddStr(builder, str);
    Stats.AddLevel(builder, level);
    return Stats.EndStats(builder);
  }

  public static void StartStats(FlatBufferBuilder builder) { builder.StartTable(21); }
  public static void AddStr(FlatBufferBuilder builder, ushort str) { builder.AddUshort(0, str, 0); }
  public static void AddDex(FlatBufferBuilder builder, ushort dex) { builder.AddUshort(1, dex, 0); }
  public static void Add_int(FlatBufferBuilder builder, ushort Int) { builder.AddUshort(2, Int, 0); }
  public static void AddCon(FlatBufferBuilder builder, ushort con) { builder.AddUshort(3, con, 0); }
  public static void AddCha(FlatBufferBuilder builder, ushort cha) { builder.AddUshort(4, cha, 0); }
  public static void AddSen(FlatBufferBuilder builder, ushort sen) { builder.AddUshort(5, sen, 0); }
  public static void AddMoveSpeed(FlatBufferBuilder builder, ushort moveSpeed) { builder.AddUshort(6, moveSpeed, 0); }
  public static void AddAttackSpeed(FlatBufferBuilder builder, ushort attackSpeed) { builder.AddUshort(7, attackSpeed, 0); }
  public static void AddAttackPower(FlatBufferBuilder builder, uint attackPower) { builder.AddUint(8, attackPower, 0); }
  public static void AddHitRate(FlatBufferBuilder builder, uint hitRate) { builder.AddUint(9, hitRate, 0); }
  public static void AddCrit(FlatBufferBuilder builder, ushort crit) { builder.AddUshort(10, crit, 0); }
  public static void AddDefense(FlatBufferBuilder builder, ushort defense) { builder.AddUshort(11, defense, 0); }
  public static void AddMagicResistance(FlatBufferBuilder builder, ushort magicResistance) { builder.AddUshort(12, magicResistance, 0); }
  public static void AddDodge(FlatBufferBuilder builder, ushort dodge) { builder.AddUshort(13, dodge, 0); }
  public static void AddLevel(FlatBufferBuilder builder, byte level) { builder.AddByte(14, level, 0); }
  public static void AddHp(FlatBufferBuilder builder, uint hp) { builder.AddUint(15, hp, 0); }
  public static void AddMp(FlatBufferBuilder builder, uint mp) { builder.AddUint(16, mp, 0); }
  public static void AddExp(FlatBufferBuilder builder, uint exp) { builder.AddUint(17, exp, 0); }
  public static void AddStamina(FlatBufferBuilder builder, ushort stamina) { builder.AddUshort(18, stamina, 0); }
  public static void AddStatPoints(FlatBufferBuilder builder, ushort statPoints) { builder.AddUshort(19, statPoints, 0); }
  public static void AddSkillPoints(FlatBufferBuilder builder, ushort skillPoints) { builder.AddUshort(20, skillPoints, 0); }
  public static Offset<Rose.Network.Packets.Stats> EndStats(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Rose.Network.Packets.Stats>(o);
  }
};


}
